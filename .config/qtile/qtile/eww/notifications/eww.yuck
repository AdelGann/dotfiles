;;Notification variables
(deflisten notifications-cards "script/logger.zsh subscribe")

;;notification widgets
(defwidget notification []
   (box :class "notifications-box" :space-evenly "false" :orientation "v"
          (box :orientation "v"
            :space-evenly "false"
            :class "notification-layout-box"
            (box :space-evenly "false"
              :class "notification-headers"
              (label :text "Notifications"
                :class "notification-headers-label"
                :halign "center"))
            (literal :content notifications-cards :class "notification-literal")
            (button :onclick "script/logger.zsh clear" :halign "end" :class "notification-headers-clear" "Clear All" )
            )))

(defwidget notification-card [?class summary body image ?SL ?M ?L ?R application]
  (eventbox :onmiddleclick M
    :onclick L
    :onrightclick R
    :class "notification-card-eventbox"
    (box :space-evenly false :orientation "v"
      (box :space-evenly "true" :orientation "h" :class "notification-card-header-box"
          (label :class "notification-app-name" :text "${application}" :halign "start")
          (button :onclick "Main/scripts/logger.zsh rm_id ${SL}"
          :class "notification-card-notify-close" :halign "end"
          (label :text "ó°…™" :tooltip "Remove this notification.")))
      (box :space-evenly "false" :orientation "h"
      (box :class "notification-image" :style "background-image: url(\"${image}\");")
      (box :orientation "vertical"
        :class class
        :space-evenly false
        :hexpand true
        :class "notification-card-box"
      
        (box :space-evenly false
          (label :limit-width 25
            :wrap true
            :text summary
            :class "notification-summary"
            :halign "start"
          :hexpand true))
        (label :limit-width 30
          :wrap true
          :text body
          :halign "start"
        :class "notification-body"))))))

;; notification
(defwindow notification
           :monitor 0
           :geometry (geometry 
                               :y "35px"
                               :anchor "top center")
                               :stacking "fg"
                               :reserve (struts :distance "40px" :side "top")
                               :windowtype "dock"
                               :wm-ignore true

(notification))



